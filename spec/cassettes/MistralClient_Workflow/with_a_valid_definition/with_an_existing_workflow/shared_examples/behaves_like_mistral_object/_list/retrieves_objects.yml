---
http_interactions:
- request:
    method: post
    uri: http://127.0.0.1:8001/api/v1/namespaces/workflows/pods/mistral:8989/proxy/v2/workflows
    body:
      encoding: UTF-8
      string: |
        ---
          version: "2.0"
          echo_test:
            type: direct
            tasks:
              echo:
                action: std.echo output="ok"
    headers:
      Content-Type:
      - text/plain
  response:
    status:
      code: 201
      message: Created
    headers:
      Content-Length:
      - '341'
      Content-Type:
      - application/json
      Date:
      - Wed, 13 Dec 2017 21:14:01 GMT
    body:
      encoding: UTF-8
      string: '{"workflows": [{"definition": "---\n  version: \"2.0\"\n  echo_test:\n    type:
        direct\n    tasks:\n      echo:\n        action: std.echo output=\"ok\"\n",
        "name": "echo_test", "tags": [], "created_at": "2017-12-13 21:14:01", "scope":
        "private", "input": "", "project_id": "<default-project>", "id": "162e7459-4eb4-4791-9a13-29c879bdea22"}]}'
    http_version: 
  recorded_at: Wed, 13 Dec 2017 21:14:01 GMT
- request:
    method: get
    uri: http://127.0.0.1:8001/api/v1/namespaces/workflows/pods/mistral:8989/proxy/v2/workflows
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '3920'
      Content-Type:
      - application/json
      Date:
      - Wed, 13 Dec 2017 21:14:01 GMT
    body:
      encoding: UTF-8
      string: '{"workflows": [{"definition": "---\nversion: ''2.0''\n\nstd.create_instance:\n  type:
        direct\n\n  description: |\n    Creates VM and waits till VM OS is up and
        running.\n\n  input:\n    - name\n    - image_id\n    - flavor_id\n    - ssh_username:
        null\n    - ssh_password: null\n\n    # Name of previously created keypair
        to inject into the instance.\n    # Either ssh credentials or keypair must
        be provided.\n    - key_name: null\n\n    # Security_groups: A list of security
        group names\n    - security_groups: null\n\n    # An ordered list of nics
        to be added to this server, with information about connected networks, fixed
        IPs, port etc.\n    # Example: nics: [{\"net-id\": \"27aa8c1c-d6b8-4474-b7f7-6cdcf63ac856\"}]\n    -
        nics: null\n\n  task-defaults:\n    on-error:\n      - delete_vm\n\n  output:\n    ip:
        <% $.vm_ip %>\n    id: <% $.vm_id %>\n    name: <% $.name %>\n    status:
        <% $.status %>\n\n  tasks:\n    create_vm:\n      description: Initial request
        to create a VM.\n      action: nova.servers_create name=<% $.name %> image=<%
        $.image_id %> flavor=<% $.flavor_id %>\n      input:\n        key_name: <%
        $.key_name %>\n        security_groups: <% $.security_groups %>\n        nics:
        <% $.nics %>\n      publish:\n        vm_id: <% task(create_vm).result.id
        %>\n      on-success:\n        - search_for_ip\n\n    search_for_ip:\n      description:
        Gets first free ip from Nova floating IPs.\n      action: nova.floating_ips_findall
        instance_id=null\n      publish:\n        vm_ip: <% task(search_for_ip).result[0].ip
        %>\n      on-success:\n        - wait_vm_active\n\n    wait_vm_active:\n      description:
        Waits till VM is ACTIVE.\n      action: nova.servers_find id=<% $.vm_id %>
        status=\"ACTIVE\"\n      retry:\n        count: 10\n        delay: 10\n      publish:\n        status:
        <% task(wait_vm_active).result.status %>\n      on-success:\n        - associate_ip\n\n    associate_ip:\n      description:
        Associate server with one of floating IPs.\n      action: nova.servers_add_floating_ip
        server=<% $.vm_id %> address=<% $.vm_ip %>\n      wait-after: 5\n      on-success:\n        -
        wait_ssh\n\n    wait_ssh:\n      description: Wait till operating system on
        the VM is up (SSH command).\n      action: std.wait_ssh username=<% $.ssh_username
        %> password=<% $.ssh_password %> host=<% $.vm_ip %>\n      retry:\n        count:
        10\n        delay: 10\n\n    delete_vm:\n      description: Destroy VM.\n      workflow:
        std.delete_instance instance_id=<% $.vm_id %>\n      on-complete:\n        -
        fail\n", "name": "std.create_instance", "tags": [], "created_at": "2017-12-13
        21:12:17", "updated_at": null, "scope": "public", "input": "name, image_id,
        flavor_id, ssh_username=None, ssh_password=None, key_name=None, security_groups=None,
        nics=None", "project_id": "<default-project>", "id": "e1985316-a54b-46d4-bb67-1860cdbcf237"},
        {"definition": "---\nversion: \"2.0\"\n\nstd.delete_instance:\n  type: direct\n\n  input:\n    -
        instance_id\n\n  description: Deletes VM.\n\n  tasks:\n    delete_vm:\n      description:
        Destroy VM.\n      action: nova.servers_delete server=<% $.instance_id %>\n      wait-after:
        10\n      on-success:\n        - find_given_vm\n\n    find_given_vm:\n      description:
        Checks that VM is already deleted.\n      action: nova.servers_find id=<%
        $.instance_id %>\n      on-error:\n        - succeed\n\n", "name": "std.delete_instance",
        "tags": [], "created_at": "2017-12-13 21:12:17", "updated_at": null, "scope":
        "public", "input": "instance_id", "project_id": "<default-project>", "id":
        "f266724a-efca-4fd8-b10d-abb47e9bd673"}, {"definition": "---\n  version: \"2.0\"\n  echo_test:\n    type:
        direct\n    tasks:\n      echo:\n        action: std.echo output=\"ok\"\n",
        "name": "echo_test", "tags": [], "created_at": "2017-12-13 21:14:01", "updated_at":
        null, "scope": "private", "input": "", "project_id": "<default-project>",
        "id": "162e7459-4eb4-4791-9a13-29c879bdea22"}]}'
    http_version: 
  recorded_at: Wed, 13 Dec 2017 21:14:01 GMT
- request:
    method: delete
    uri: http://127.0.0.1:8001/api/v1/namespaces/workflows/pods/mistral:8989/proxy/v2/workflows/162e7459-4eb4-4791-9a13-29c879bdea22
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 204
      message: No Content
    headers:
      Date:
      - Wed, 13 Dec 2017 21:14:02 GMT
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Wed, 13 Dec 2017 21:14:02 GMT
recorded_with: VCR 3.0.3
